{
  "name": "filing-cabinet",
  "version": "1.0.4",
  "description": "Find files based on partial paths",
  "main": "index.js",
  "bin": {
    "filing-cabinet": "bin/cli.js"
  },
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "jscs index.js test/test.js && mocha"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mrjoelkemp/node-filing-cabinet.git"
  },
  "keywords": [
    "lookup",
    "es6",
    "amd",
    "commonjs",
    "sass",
    "stylus",
    "partial",
    "resolution",
    "paths"
  ],
  "author": {
    "name": "Joel Kemp",
    "email": "joel@mrjoelkemp.com",
    "url": "http://www.mrjoelkemp.com/"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mrjoelkemp/node-filing-cabinet/issues"
  },
  "homepage": "https://github.com/mrjoelkemp/node-filing-cabinet",
  "devDependencies": {
    "jscs": "~2.0.0",
    "mocha": "~2.2.5",
    "mock-fs": "~3.0.0",
    "rewire": "~2.3.4",
    "sinon": "~1.15.4"
  },
  "dependencies": {
    "app-module-path": "~1.0.4",
    "commander": "~2.8.1",
    "debug": "~2.2.0",
    "module-definition": "~2.2.2",
    "module-lookup-amd": "~2.0.4",
    "resolve-dependency-path": "~1.0.2",
    "sass-lookup": "~1.0.2",
    "stylus-lookup": "~1.0.0"
  },
  "readme": "### filing-cabinet [![npm](http://img.shields.io/npm/v/filing-cabinet.svg)](https://npmjs.org/package/filing-cabinet) [![npm](http://img.shields.io/npm/dm/filing-cabinet.svg)](https://npmjs.org/package/filing-cabinet)\n\n> Look up a filename based on a partial path\n\n`npm install filing-cabinet`\n\n### Usage\n\n```js\n\nvar cabinet = require('filing-cabinet');\n\nvar result = cabinet({\n  partial: 'somePartialPath',\n  directory: 'path/to/all/files',\n  filename: 'path/to/parent/file',\n  config: 'path/to/requirejs/config'\n});\n\nconsole.log(result);\n```\n\n* `partial`: the dependency path\n * This could be in any of the registered languages\n\n\n### Registered languages\n\nBy default, filing-cabinet provides support for the following languages:\n\n* JavaScript (all files with the `.js` extension)\n* Sass (`.scss` and `.sass`)\n* Stylus (`.styl`)\n\nYou can register resolvers for new languages via `cabinet.register(extension, resolver)`.\n\n* `extension`: the extension of the file that should use the custom resolver (ex: '.py', '.php')\n* `resolver`: a function that accepts the following (ordered) arguments that were given to cabinet:\n  * `partial`\n  * `filename`\n  * `directory`\n  * `config`\n\nFor examples of resolver implementations, take a look at the default language resolvers:\n\n* [sass-lookup](https://github.com/mrjoelkemp/node-sass-lookup)\n* [stylus-lookup](https://github.com/mrjoelkemp/node-stylus-lookup)\n* [amdLookup](https://github.com/mrjoelkemp/node-module-lookup-amd)\n\nIf a given extension does not have a registered resolver, cabinet will use\na generic file resolver which is basically `require('path').join` with a bit of extension defaulting logic.\n\n### Shell script\n\n* Requires a global install `npm install -g filing-cabinet`\n\n`filing-cabinet [options] <dependencyPath>`\n\n* See `filing-cabinet --help` for details on the options",
  "readmeFilename": "readme.md",
  "gitHead": "8bad7e5b080fbd8d32453c94c51c735fc6f046f1",
  "_id": "filing-cabinet@1.0.4",
  "_shasum": "fc775ed51913ec32cf23b4b89c4acab7f93c4017",
  "_from": "filing-cabinet@>=1.0.3 <2.0.0"
}
