{
  "name": "is-calling-function",
  "version": "1.0.4",
  "description": "Whether or not a file is calling a particular function",
  "main": "index.js",
  "scripts": {
    "test": "jscs -p google index.js test/*.js && mocha test/test.js"
  },
  "bin": {
    "is-calling-function": "bin/cli.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mrjoelkemp/node-is-calling-function.git"
  },
  "keywords": [
    "module",
    "calling",
    "function"
  ],
  "author": {
    "name": "Joel Kemp",
    "email": "joel@mrjoelkemp.com",
    "url": "http://www.mrjoelkemp.com/"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mrjoelkemp/node-is-calling-function/issues"
  },
  "homepage": "https://github.com/mrjoelkemp/node-is-calling-function",
  "dependencies": {
    "node-source-walk": "^2.0.0"
  },
  "devDependencies": {
    "jscs": "~1.9.0",
    "mocha": "~2.1.0"
  },
  "readme": "### is-calling-function [![npm](http://img.shields.io/npm/v/is-calling-function.svg)](https://npmjs.org/package/is-calling-function) [![npm](http://img.shields.io/npm/dm/is-calling-function.svg)](https://npmjs.org/package/is-calling-function)\n\n> Whether or not a file is calling a particular function\n\n`npm install is-calling-function`\n\n### Usage\n\n```js\nvar isCallingFunction = require('is-calling-function');\n\nvar result = isCallingFunction(source, functionName);\n```\n\n* Note: you can also pass an AST as the source for reuse and to avoid double-parsing.\n* Handles function declarations, function member expressions, and IIFEs\n\nShell usage (requires global install `-g`)\n\n`is-calling-function filename functionName`",
  "readmeFilename": "Readme.md",
  "gitHead": "361f3fb4ae0bf2698654e31ad7f3da9f2e9cdcf5",
  "_id": "is-calling-function@1.0.4",
  "_shasum": "822aca07ca776e8ce81ae9e706e7439abba4e26b",
  "_from": "is-calling-function@>=1.0.3 <2.0.0"
}
