{
  "name": "dependency-tree",
  "version": "3.1.1",
  "description": "Get the dependency tree of a module (as a list)",
  "main": "index.js",
  "scripts": {
    "test": "jscs -p google index.js test/test.js && mocha test/test.js"
  },
  "bin": {
    "tree": "bin/cli.js"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:mrjoelkemp/node-dependency-tree.git"
  },
  "keywords": [
    "dependency",
    "tree",
    "module",
    "requirejs",
    "AMD",
    "commonjs",
    "es6",
    "sass"
  ],
  "author": {
    "name": "Joel Kemp",
    "email": "joel@mrjoelkemp.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mrjoelkemp/node-dependency-tree/issues"
  },
  "homepage": "https://github.com/mrjoelkemp/node-dependency-tree",
  "dependencies": {
    "commander": "^2.6.0",
    "precinct": "^2.5.0",
    "q": "^1.0.1",
    "resolve-dependency-path": "^1.0.1"
  },
  "devDependencies": {
    "jscs": "~1.13.1",
    "mocha": "~2.0.1",
    "sinon": "~1.12.2"
  },
  "readme": "### dependency-tree [![npm](http://img.shields.io/npm/v/dependency-tree.svg)](https://npmjs.org/package/dependency-tree) [![npm](http://img.shields.io/npm/dm/dependency-tree.svg)](https://npmjs.org/package/dependency-tree)\n\n> Get the dependency tree of a module\n\n`npm install dependency-tree`\n\n### Usage\n\n```js\nvar dependencyTree = require('dependency-tree');\n\n// Returns a dependency tree object for the given file\nvar tree = dependencyTree('path/to/a/file', 'path/to/all/files');\n\n// Returns a post-order traversal (list form) of the tree with duplicate sub-trees pruned.\n// This is useful for bundling source files, because the list gives the concatenation order.\nvar list = dependencyTree.toList('path/to/a/file', 'path/to/all/files');\n```\n\n* Works for JS (AMD, CommonJS, ES6 modules) and CSS preprocessors (Sass, Stylus); basically, any filetype supported by [Precinct](https://github.com/mrjoelkemp/node-precinct).\n* All core Node modules (assert, path, fs, etc) are removed from the dependency list by default\n\nThe object form is a mapping of the dependency tree to the filesystem â€“\nwhere every key is an absolute filepath and the value is another object/subtree.\n\nExample:\n\n```js\n{\n  '/Users/mrjoelkemp/Documents/node-dependency-tree/test/example/extended/a.js': {\n    '/Users/mrjoelkemp/Documents/node-dependency-tree/test/example/extended/b.js': {\n      '/Users/mrjoelkemp/Documents/node-dependency-tree/test/example/extended/d.js': {},\n      '/Users/mrjoelkemp/Documents/node-dependency-tree/test/example/extended/e.js': {}\n    },\n    '/Users/mrjoelkemp/Documents/node-dependency-tree/test/example/extended/c.js': {\n      '/Users/mrjoelkemp/Documents/node-dependency-tree/test/example/extended/f.js': {},\n      '/Users/mrjoelkemp/Documents/node-dependency-tree/test/example/extended/g.js': {}\n    }\n  }\n}\n```\n\nThis structure was chosen to serve as a visual representation of the dependency tree\nfor use in the [Dependents](https://github.com/mrjoelkemp/sublime-dependents) plugin.\n\n**Optional**\n\n* `cache`: 3rd argument that's an empty object (or shared across multiple runs of this module)\nused for avoiding redundant subtree generations.\n\n**Shell version** (assuming `npm install -g dependency-tree`):\n\n```\ntree --directory=path/to/all/supported/files [--list-form] filename\n```\n\nPrints the dependency tree of the given filename as stringified json (by default).\n\n* You can alternatively print out the list form one element per line using the `--list-form` option.",
  "readmeFilename": "README.md",
  "gitHead": "268e50d0d746853e0041c44bcb340d482aa13939",
  "_id": "dependency-tree@3.1.1",
  "_shasum": "5f3e577cc6a8af8bf272e2ecb4af7bbd3b28071a",
  "_from": "dependency-tree@>=3.1.0 <4.0.0"
}
